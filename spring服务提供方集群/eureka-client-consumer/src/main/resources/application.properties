spring.application.name=eureka-client-consumer
server.port=8003
eureka.client.serviceUrl.defaultZone=http://localhost:8000/eureka/
#调用服务端接口的负载均衡策略，选择一个最小的并发请求的server
eureka-client-provider.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.BestAvailableRule
#调用服务端接口的负载均衡策略，随机
#eureka-client-provider.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
#调用服务端接口的负载均衡策略，roundRobin方式轮询选择server
#eureka-client-provider.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RoundRobinRule
#调用服务端接口的负载均衡策略，根据响应时间分配一个weight，响应时间越长，weight越小，被选中的可能性越低。
#eureka-client-provider.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.WeightedResponseTimeRule
#调用服务端接口的负载均衡策略，复合判断server所在区域的性能和server的可用性选择server,默认的策略
#eureka-client-provider.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.ZoneAvoidanceRule
#调用服务端接口的负载均衡策略，过滤掉那些因为一直连接失败的被标记为circuit tripped的后端server，并过滤掉那些高并发的的后端server（active connections 超过配置的阈值）
#eureka-client-provider.ribbon.NFLoadBalancerRuleClassName=com.netflix.AvailabilityFilteringRule